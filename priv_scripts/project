#! /usr/bin/env zsh

# Use Zsh globbing to expand directories
folder_list=(
  $HOME/dev/ash/*(/) #  Only match directories
  $HOME/dev/alembic/*(/)
)

# Explicitly named folders
explicit_folders=(
  $HOME/.dotfiles
)

# Combine all folders into one array
all_folders=($folder_list $explicit_folders)

# Verify folders exist
valid_folders=()
for folder in $all_folders; do
  if [[ -d $folder ]]; then
    valid_folders+=($folder)
  fi
done

# Use fzf to select a directory
selected_dir=$(printf '%s\n' "${valid_folders[@]}" | fzf --prompt="Select a folder: ")

# Check if a selection was made
if [[ -n $selected_dir ]]; then
  # Get the Kitty window information
  kitty_info=$(kitty @ ls)

  # Extract the current window title using jq
  current_title=$(kitty @ ls | jq -r '
    [.[] | select(.is_focused == true)] | 
    first | 
    .tabs[0].windows[0].title // empty
  ')

  project_name="Project $(echo "$selected_dir" | sed "s|$HOME/|~/|g")"
  project_name=$(echo "$project_name" | tr ' :' '-')

  if [[ $current_title != Project-* ]]; then
    kitten @ set-window-title "$project_name"
    cd "$selected_dir" > /dev/null
    nvim
  else
    if [[ $current_title == "$project_name" ]]; then
      cd "$selected_dir" > /dev/null
      nvim
    else
      # Run the kitty command with --match to switch to a matching window
      if ! kitty @ focus-window --match="title:^${project_name}" 2> /dev/null; then
        # Retry without the --match option if none is found
        kitty @ launch \
            --title="${project_name}" \
            --type os-window \
            --cwd "$selected_dir" \
            --hold \
            /bin/zsh -c "/opt/homebrew/bin/nvim"
      fi
    fi
  fi
else
  echo "No selection made."
fi
